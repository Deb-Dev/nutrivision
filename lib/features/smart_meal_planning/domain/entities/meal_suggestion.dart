import 'package:freezed_annotation/freezed_annotation.dart';
import '../../../../core/models/meal_models.dart';

part 'meal_suggestion.freezed.dart';
part 'meal_suggestion.g.dart';

/// Represents a meal suggestion generated by AI or other sources
@freezed
class MealSuggestion with _$MealSuggestion {
  const factory MealSuggestion({
    required String id,
    required String name,
    required String mealType, // breakfast, lunch, dinner, snack
    required List<SuggestedFoodItem> items,
    required NutritionalSummary estimatedNutrition,
    required SuggestionSource source,
    DateTime? createdAt,
    String? imageUrl,
    String? description,
    double? preparationTimeMinutes,
    @Default({})
    Map<String, dynamic> attributes, // For tags, allergens, cuisines, etc.
    @Default(false) bool isFavorite,
    double? userRating, // 1-5 stars
  }) = _MealSuggestion;

  factory MealSuggestion.fromJson(Map<String, dynamic> json) =>
      _$MealSuggestionFromJson(json);
}

/// Represents a food item in a meal suggestion
@freezed
class SuggestedFoodItem with _$SuggestedFoodItem {
  const factory SuggestedFoodItem({
    required String id,
    required String name,
    required double quantity,
    required String unit,
    @Default({}) Map<String, double> nutritionalValues,
    String? alternativeFor, // ID of another item this can replace
    @Default([]) List<String> alternatives, // IDs of possible alternatives
    String? imageUrl,
    String? notes,
    @Default({}) Map<String, dynamic> metadata,
  }) = _SuggestedFoodItem;

  factory SuggestedFoodItem.fromJson(Map<String, dynamic> json) =>
      _$SuggestedFoodItemFromJson(json);
}

/// Source of a meal suggestion
enum SuggestionSource {
  ai, // Generated by AI
  nutritionist, // Provided by nutritionist
  community, // From community recipes
  favorited, // Previously favorited by user
  popular, // Popular recipes
  personalized, // Personalized based on user preferences
}
